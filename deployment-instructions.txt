# üìã INSTRU√á√ïES PARA DEPLOY NO RENDER - NLW Agents API

## üîß Pr√©-requisitos

1. **Conta no Render**
   - Crie uma conta em: https://render.com
   - Conecte sua conta GitHub ao Render

2. **Reposit√≥rio GitHub**
   - Fa√ßa push do c√≥digo para um reposit√≥rio GitHub
   - Certifique-se de que os arquivos est√£o na estrutura correta:
     ```
     /
     ‚îú‚îÄ‚îÄ backend/
     ‚îÇ   ‚îú‚îÄ‚îÄ server.py
     ‚îÇ   ‚îú‚îÄ‚îÄ ai_service.py
     ‚îÇ   ‚îú‚îÄ‚îÄ requirements.txt
     ‚îÇ   ‚îî‚îÄ‚îÄ .env (apenas local - n√£o fazer commit)
     ‚îú‚îÄ‚îÄ frontend/
     ‚îÇ   ‚îú‚îÄ‚îÄ src/
     ‚îÇ   ‚îú‚îÄ‚îÄ public/
     ‚îÇ   ‚îú‚îÄ‚îÄ package.json
     ‚îÇ   ‚îî‚îÄ‚îÄ .env (apenas local - n√£o fazer commit)
     ‚îî‚îÄ‚îÄ render.yaml
     ```

3. **MongoDB Atlas**
   - Crie uma conta em: https://www.mongodb.com/atlas
   - Crie um cluster gratuito
   - Obtenha a connection string (ex: mongodb+srv://user:password@cluster.mongodb.net/nlw_agents)

## üöÄ Comandos para Deploy

### 1. Preparar o Reposit√≥rio

```bash
# Clone ou navegue at√© o diret√≥rio do projeto
cd seu-projeto-nlw-agents

# Adicionar arquivos ao git (se n√£o estiver versionado)
git init
git add .
git commit -m "Initial commit - NLW Agents API"

# Criar reposit√≥rio no GitHub e fazer push
git remote add origin https://github.com/seu-usuario/seu-repositorio.git
git branch -M main
git push -u origin main
```

### 2. Deploy Autom√°tico via render.yaml

```bash
# O arquivo render.yaml j√° est√° configurado na raiz do projeto
# Render detectar√° automaticamente este arquivo

# Estrutura do render.yaml:
# - Backend: Web Service (FastAPI)
# - Frontend: Static Site (React)
# - Auto-deploy habilitado
```

### 3. Configurar no Render Dashboard

1. **Conectar Reposit√≥rio:**
   - Acesse: https://dashboard.render.com
   - Clique em "New +" > "Blueprint"
   - Conecte seu reposit√≥rio GitHub
   - Render detectar√° o arquivo `render.yaml` automaticamente

2. **Configurar Vari√°veis de Ambiente:**
   
   **Para o Backend Service:**
   ```
   MONGO_URL=mongodb+srv://jeyjey2025cyborg:kjcd5588@cluster0.jkp7hed.mongodb.net/ai-let-me-ask?retryWrites=true&w=majority&appName=Cluster0
   PYTHONPATH=/opt/render/project/src/backend
   ```

   **Para o Frontend Service:**
   ```
   REACT_APP_BACKEND_URL=https://nlw-agents-backend.onrender.com
   ```

### 4. Deploy Manual (Alternativo)

Se preferir deploy manual para cada servi√ßo:

#### Backend:
```bash
# No dashboard do Render:
# 1. New + > Web Service
# 2. Connect GitHub repo
# 3. Configure:
#    - Name: nlw-agents-backend
#    - Runtime: Python
#    - Build Command: cd backend && pip install -r requirements.txt
#    - Start Command: cd backend && uvicorn server:app --host 0.0.0.0 --port $PORT
#    - Root Directory: backend
```

#### Frontend:
```bash
# No dashboard do Render:
# 1. New + > Static Site
# 2. Connect GitHub repo
# 3. Configure:
#    - Name: nlw-agents-frontend
#    - Build Command: cd frontend && yarn install && yarn build
#    - Publish Directory: frontend/build
#    - Root Directory: frontend
```

## üîí Configura√ß√£o de Vari√°veis de Ambiente

### Backend (.env local - J√Å CONFIGURADO):
```
MONGO_URL=mongodb+srv://jeyjey2025cyborg:kjcd5588@cluster0.jkp7hed.mongodb.net/ai-let-me-ask?retryWrites=true&w=majority&appName=Cluster0
```

### Frontend (.env local - N√ÉO fazer commit):
```
REACT_APP_BACKEND_URL=http://localhost:8001  # Para desenvolvimento local
```

### No Render (via Dashboard):

1. **Backend Service Environment Variables (J√Å CONFIGURADAS NO render.yaml):**
   ```
   MONGO_URL = mongodb+srv://jeyjey2025cyborg:kjcd5588@cluster0.jkp7hed.mongodb.net/ai-let-me-ask?retryWrites=true&w=majority&appName=Cluster0
   PYTHONPATH = /opt/render/project/src/backend
   ```

2. **Frontend Service Environment Variables:**
   ```
   REACT_APP_BACKEND_URL = https://seu-backend-service.onrender.com
   ```

## üìù Comandos de Verifica√ß√£o

### Testar localmente antes do deploy:

```bash
# Backend
cd backend
pip install -r requirements.txt
uvicorn server:app --host 0.0.0.0 --port 8001

# Frontend (em outro terminal)
cd frontend
yarn install
yarn start
```

### Verificar se o deploy funcionou:

```bash
# Testar backend
curl https://seu-backend-service.onrender.com/api/

# Testar frontend
curl https://seu-frontend-service.onrender.com/
```

## üîç Troubleshooting

### Problemas Comuns:

1. **Erro de CORS:**
   ```python
   # Verificar se o CORS est√° configurado no backend (server.py)
   app.add_middleware(
       CORSMiddleware,
       allow_origins=["*"],  # Configure para seu dom√≠nio em produ√ß√£o
       allow_credentials=True,
       allow_methods=["*"],
       allow_headers=["*"],
   )
   ```

2. **Erro de MongoDB:**
   - Verificar se a connection string est√° correta
   - Certificar-se de que o IP do Render est√° liberado no MongoDB Atlas (0.0.0.0/0)

3. **Build do Frontend falha:**
   ```bash
   # Verificar se todas as depend√™ncias est√£o no package.json
   # Verificar se n√£o h√° erros de sintaxe no c√≥digo React
   ```

4. **Backend n√£o responde:**
   - Verificar se a porta est√° configurada corretamente ($PORT)
   - Verificar se o comando de start est√° correto

## üéØ URLs Finais

Ap√≥s o deploy bem-sucedido:

- **Backend API:** https://nlw-agents-backend.onrender.com
- **Frontend:** https://nlw-agents-frontend.onrender.com
- **API Docs:** https://nlw-agents-backend.onrender.com/docs

## üìö Recursos √öteis

- [Documenta√ß√£o Render](https://render.com/docs)
- [Deploy FastAPI no Render](https://render.com/docs/deploy-fastapi)
- [Deploy React no Render](https://render.com/docs/deploy-create-react-app)
- [MongoDB Atlas](https://docs.atlas.mongodb.com/)

---

üöÄ **Parab√©ns! Sua aplica√ß√£o NLW Agents API est√° pronta para produ√ß√£o!**